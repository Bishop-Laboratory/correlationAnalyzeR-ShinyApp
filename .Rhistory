# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
avgenes <- correlationAnalyzeR::getAvailableGenes()
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
fluidRow()
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
# BugTesting
pairedGenesList <- list("BRCA1" = c("ATM", "BRCA2", "BRCC3"))
cleanRes <- list("selectedSpecies" = "hsapiens",
"Sample_Type" = "Normal_Tissues")
sigTest <- F
data <- correlationAnalyzeR::pairedGenesAnalyzeR(pairedGenesList = pairedGenesList,
Species = cleanRes$selectedSpecies,
Sample_Type = cleanRes$sampleType,
plotLabels = F, plotMaxMinCorr = T,
sigTest = sigTest, returnDataOnly = T,
autoRug = T, plotTitle = F, onlyTop = F)
cleanRes$selectedSpecies
library(correlationAnalyzeR)
?pairedGenesAnalyzeR
data <- correlationAnalyzeR::pairedGenesAnalyzeR(pairedGenesList = pairedGenesList,
Species = cleanRes$selectedSpecies,
Sample_Type = cleanRes$sampleType,
plotLabels = F, plotMaxMinCorr = T,
sigTest = sigTest, returnDataOnly = T,
autoRug = T, plotTitle = F, onlyTop = F)
data <- correlationAnalyzeR::pairedGenesAnalyzeR(pairedGenesList = pairedGenesList,
# Species = cleanRes$selectedSpecies,
Sample_Type = cleanRes$sampleType,
plotLabels = F, plotMaxMinCorr = T,
sigTest = sigTest, returnDataOnly = T,
autoRug = T, plotTitle = F, onlyTop = F)
data <- correlationAnalyzeR::pairedGenesAnalyzeR(pairedGenesList = pairedGenesList,
# Species = cleanRes$selectedSpecies,
# Sample_Type = cleanRes$sampleType,
plotLabels = F, plotMaxMinCorr = T,
sigTest = sigTest, returnDataOnly = T,
autoRug = T, plotTitle = F, onlyTop = F)
cleanRes$sampleType
cleanRes <- list("selectedSpecies" = "hsapiens",
"sampleType" = "Normal_Tissues")
sigTest <- F
data <- correlationAnalyzeR::pairedGenesAnalyzeR(pairedGenesList = pairedGenesList,
Species = cleanRes$selectedSpecies,
Sample_Type = cleanRes$sampleType,
plotLabels = F, plotMaxMinCorr = T,
sigTest = sigTest, returnDataOnly = T,
autoRug = T, plotTitle = F, onlyTop = F)
data <- data[[1]]
res <- list("pairedModeData" = data,
"primaryGene" = cleanRes$primaryGene,
"species" = species,
"sigTest" = sigTest,
"progress" = progress)
corrDataDF <- data$Correlation_histogram$data
View(corrDataDF)
corrDataDF$geneName
colnames(corrDataDF)[2] <- "vals"
corrDataDF <- corrDataDF[order(corrDataDF$vals, decreasing = T),]
a <- list(
title = "Correlation values"
)
p <- plot_ly(corrDataDF, x = ~vals, type = 'histogram',
text = ~paste('Gene: ', geneName, " - Value: ", round(vals, 3)))  %>%
layout(title = primaryGene) %>%
config(plot_ly(),
toImageButtonOptions = list(filename = paste0(primaryGene,
"_pairedMode_correlationHistogram.png")))
primaryGene <- "BRCA1"
p <- plot_ly(corrDataDF, x = ~vals, type = 'histogram',
text = ~paste('Gene: ', geneName, " - Value: ", round(vals, 3)))  %>%
layout(title = primaryGene) %>%
config(plot_ly(),
toImageButtonOptions = list(filename = paste0(primaryGene,
"_pairedMode_correlationHistogram.png")))
p
p <- ggpubr::gghistogram(data = corrDataDF, x = "vals", y = "..count..",
bins = 100, ylab = "Frequency\n",
title = primaryGene,
xlab = paste0(primaryGene, " correlation values"))
p
p <- ggplotly(p)
p
corrDataDF2 <- corrDataDF[which(corrDataDF$secondaryGene),]
p <- p %>%
add_segments(data = corrDataDF2, x = ~vals,
xend = ~vals, y = 0,
yend = 150,
opacity = .5) %>%
layout(showlegend = FALSE, xaxis = a)
p
p <- ggpubr::gghistogram(data = corrDataDF, x = "vals", y = "..count..",
bins = 100, ylab = "Frequency\n",
title = primaryGene,
xlab = paste0(primaryGene, " correlation values"))
p <- ggplotly(p)
p <- p %>%
add_segments(data = corrDataDF2, x = ~vals,
xend = ~vals, y = 0,
yend = 150,
text = ~paste('Gene: ', geneName, " - Value: ", round(vals, 3)),
opacity = .5) %>%
layout(showlegend = FALSE, xaxis = a)
p
p <- p %>%
add_segments(data = corrDataDF2, x = ~vals,
xend = ~vals, y = 0,
yend = 150, color = 'rgba(255, 182, 193, .9)',
text = ~paste('Gene: ', geneName, " - Value: ", round(vals, 3)),
opacity = .5) %>%
layout(showlegend = FALSE, xaxis = a)
p
p <- p %>%
add_segments(data = corrDataDF2, x = ~vals,
xend = ~vals, y = 0,
yend = 150, color = 'red',
text = ~paste('Gene: ', geneName, " - Value: ", round(vals, 3)),
opacity = .5) %>%
layout(showlegend = FALSE, xaxis = a)
p
p <- p %>%
add_segments(data = corrDataDF2, x = ~vals,
xend = ~vals, y = 0,
yend = 150, color = 'orange',
text = ~paste('Gene: ', geneName, " - Value: ", round(vals, 3)),
opacity = .5) %>%
layout(showlegend = FALSE, xaxis = a)
p
p <- p %>%
add_segments(data = corrDataDF2, x = ~vals,
xend = ~vals, y = 0,
yend = 150, color = I('red'),
text = ~paste('Gene: ', geneName, " - Value: ", round(vals, 3)),
opacity = .5) %>%
layout(showlegend = FALSE, xaxis = a)
p
p <- p %>%
add_segments(data = corrDataDF2, x = ~vals,
xend = ~vals, y = 0,
yend = 150, color = I('red'),
text = ~paste('Gene: ', geneName, " - Value: ", round(vals, 3)),
opacity = .5) %>%
layout(showlegend = FALSE, xaxis = a) %>%
config(plot_ly(),
toImageButtonOptions = list(filename = paste0(primaryGene,
"_pairedMode_correlationHistogram.png")))
p <- ggpubr::gghistogram(data = corrDataDF, x = "vals", y = "..count..",
bins = 100, ylab = "Frequency\n",
title = primaryGene,
xlab = paste0(primaryGene, " correlation values"))
p <- ggplotly(p)
p <- p %>%
add_segments(data = corrDataDF2, x = ~vals,
xend = ~vals, y = 0,
yend = 150, color = I('red'),
text = ~paste('Gene: ', geneName, " - Value: ", round(vals, 3)),
opacity = .5) %>%
layout(showlegend = FALSE, xaxis = a) %>%
config(plot_ly(),
toImageButtonOptions = list(filename = paste0(primaryGene,
"_pairedMode_correlationHistogram.png")))
p
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
##------ Wed Aug 14 12:35:02 2019 ------##
##------ Wed Aug 14 12:35:04 2019 ------##
##------ Wed Aug 14 12:36:03 2019 ------##
##------ Wed Aug 14 12:36:13 2019 ------##
##------ Wed Aug 14 12:53:05 2019 ------##
##------ Wed Aug 14 12:53:05 2019 ------##
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
?t.test
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
tags$div(id="footerTag",p(footer))
tags$div(id="footerTag",p("footer"))
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
?shinytheme
shinytheme("united")
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
##------ Wed Aug 14 17:13:23 2019 ------##
##------ Wed Aug 14 17:13:24 2019 ------##
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
##------ Wed Aug 14 21:16:28 2019 ------##
##------ Wed Aug 14 21:16:29 2019 ------##
library(biomaRt)
