runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
##------ Sat Aug 03 11:02:38 2019 ------##
##------ Sat Aug 03 11:02:39 2019 ------##
##------ Sat Aug 03 11:09:39 2019 ------##
##------ Sat Aug 03 11:09:40 2019 ------##
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
##------ Sat Aug 03 11:15:42 2019 ------##
##------ Sat Aug 03 11:15:43 2019 ------##
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
##------ Sat Aug 03 11:18:49 2019 ------##
##------ Sat Aug 03 11:18:50 2019 ------##
##------ Sat Aug 03 11:19:35 2019 ------##
##------ Sat Aug 03 11:19:36 2019 ------##
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
##------ Sat Aug 03 11:21:59 2019 ------##
##------ Sat Aug 03 11:22:00 2019 ------##
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
##------ Sat Aug 03 11:26:02 2019 ------##
##------ Sat Aug 03 11:26:03 2019 ------##
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
##------ Sat Aug 03 11:31:15 2019 ------##
##------ Sat Aug 03 11:31:16 2019 ------##
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
##------ Sat Aug 03 11:33:22 2019 ------##
##------ Sat Aug 03 11:33:22 2019 ------##
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
em("ghel")
h4(em("Choose a 'GSEA type' to analyze correlated pathways."))
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
##------ Mon Aug 05 12:23:35 2019 ------##
##------ Mon Aug 05 12:23:37 2019 ------##
##------ Mon Aug 05 12:25:57 2019 ------##
##------ Mon Aug 05 12:25:59 2019 ------##
##------ Mon Aug 05 12:27:43 2019 ------##
##------ Mon Aug 05 12:27:44 2019 ------##
##------ Mon Aug 05 12:28:31 2019 ------##
##------ Mon Aug 05 12:28:33 2019 ------##
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
##------ Mon Aug 05 12:41:48 2019 ------##
##------ Mon Aug 05 12:41:49 2019 ------##
##------ Mon Aug 05 12:42:26 2019 ------##
##------ Mon Aug 05 12:42:27 2019 ------##
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
##------ Mon Aug 05 12:43:00 2019 ------##
##------ Mon Aug 05 12:43:01 2019 ------##
##------ Mon Aug 05 12:43:36 2019 ------##
##------ Mon Aug 05 12:43:38 2019 ------##
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
##------ Mon Aug 05 12:50:51 2019 ------##
##------ Mon Aug 05 12:50:52 2019 ------##
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
##------ Mon Aug 05 12:51:25 2019 ------##
##------ Mon Aug 05 12:51:26 2019 ------##
##------ Mon Aug 05 12:52:02 2019 ------##
##------ Mon Aug 05 12:52:03 2019 ------##
vev <- c("a", "c", "b")
vec <- factor(vev, levels = c("a", "b", "c")
)
vec
expression(delta)
expression(delta)
?expression
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
?hideTab
library(shiny)
?hideTab
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
?show
shinyjs::show()
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
tags$head()
tags$head
style()
HTML
HTML()
HTML("a")
HTML("av")
install.packages('rsconnect')
rsconnect::setAccountInfo(name='bishoplab',
token='9495BB6D89BF5D7F91E9893774292E24',
secret='fIbUOfIZpB2CZ96yFg51rzYpWSuBIPg5JPgPF5CY')
library(rsconnect)
rsconnect::deployApp()
options(repos = BiocInstaller::biocinstallRepos())
BiocManager::repositories()
options(repos = BiocManager::repositories())
library(rsconnect)
rsconnect::deployApp()
library(rsconnect)
rsconnect::deployApp()
library(rsconnect)
rsconnect::deployApp()
devtools::install_github("millerh1/correlationAnalyzeR")
library(correlationAnalyzeR)
rsconnect::appDependencies()
library(rsconnect)
rsconnect::deployApp()
library(rsconnect)
rsconnect::deployApp()
library(rsconnect)
rsconnect::deployApp()
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
##------ Wed Aug 07 09:25:47 2019 ------##
##------ Wed Aug 07 09:25:48 2019 ------##
##------ Wed Aug 07 09:26:10 2019 ------##
##------ Wed Aug 07 09:26:11 2019 ------##
##------ Wed Aug 07 09:26:54 2019 ------##
##------ Wed Aug 07 09:26:55 2019 ------##
##------ Wed Aug 07 09:31:44 2019 ------##
##------ Wed Aug 07 09:31:45 2019 ------##
##------ Wed Aug 07 09:41:22 2019 ------##
##------ Wed Aug 07 09:41:24 2019 ------##
##------ Wed Aug 07 09:42:03 2019 ------##
##------ Wed Aug 07 09:42:04 2019 ------##
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
##------ Wed Aug 07 10:05:56 2019 ------##
##------ Wed Aug 07 10:05:57 2019 ------##
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
##------ Wed Aug 07 10:09:48 2019 ------##
##------ Wed Aug 07 10:09:49 2019 ------##
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
##------ Wed Aug 07 10:15:42 2019 ------##
##------ Wed Aug 07 10:15:43 2019 ------##
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(shiny)
library(shinythemes)
library(shinyjs)
# Helper functions for shiny apps
require(RMySQL)
require(DBI)
source("scripts/modules.R")
source("scripts/helpers.R")
# # Load data for the global environment
load("data/geneInfo/HS_basicGeneInfo.RData")
load("data/geneInfo/MM_basicGeneInfo.RData")
load("data/symbol_suggestions.RData")
humanGeneOptions <- symbolsFinal$alias_symbol[which(symbolsFinal$species == "hsapiens")]
mouseGeneOptions <- symbolsFinal$alias_symbol[which(symbolsFinal$species == "mmusculus")]
# Create global data object
GlobalData <- list("HS_basicGeneInfo" = HS_basicGeneInfo,
'MM_basicGeneInfo' = MM_basicGeneInfo,
'humanGeneOptions' = humanGeneOptions,
'mouseGeneOptions' = mouseGeneOptions)
ui <- navbarPage(
theme = shinytheme("united"),
title = "Correlation AnalyzeR",
tabPanel(
title = "About",
value = "aboutTab",
fluidPage(
br(),
includeHTML("www/homepage.html")
)
),
tabPanel(
title = "Single mode",
value = "singleModeTab",
sidebarLayout(
sidebarPanel(
width = 2,
singleModeAnalysisUI("singleModeAnalysis")
),
mainPanel(
width = 10,
singleModePlotsUI("singleModePlots")
)
)
),
tabPanel(
title = "Paired mode",
value = "pairedModeTab",
sidebarLayout(
sidebarPanel(
width = 2,
pairedModeAnalysisUI("pairedModeAnalysis")
),
mainPanel(
width = 10,
pairedModePlotsUI("pairedModePlots")
)
)
),
tabPanel(
title = "Topology mode",
value = "topologyModeTab",
sidebarLayout(
sidebarPanel(
width = 2,
topologyModeAnalysisUI("topologyModeAnalysis")
),
mainPanel(
width = 10,
topologyModePlotsUI("topologyModePlots")
)
)
),
br(),
br()
)
server <- function(input, output, session) {
dataList <- reactiveValues(singleModeData = NULL,
pairedModeData = NULL,
topologyModeData = NULL)
observe({
# Pull out all available analyses
dataList[["singleModeData"]] <- callModule(module = singleModeAnalysis,
id = "singleModeAnalysis",
parent_session = parent_session,
GlobalData = GlobalData)
dataList[["pairedModeData"]] <- callModule(module = pairedModeAnalysis,
id = "pairedModeAnalysis",
parent_session = parent_session,
GlobalData = GlobalData)
dataList[["topologyModeData"]] <- callModule(module = topologyModeAnalysis,
id = "topologyModeAnalysis",
parent_session = parent_session,
GlobalData = GlobalData)
# Pass analyses to plotting modules
callModule(module = singleModePlots,
id = "singleModePlots",
dataTables = dataList,
parent_session = session)
callModule(module = pairedModePlots,
id = "pairedModePlots",
dataTables = dataList,
parent_session = session,
GlobalData = GlobalData)
callModule(module = topologyModePlots,
id = "topologyModePlots",
dataTables = dataList,
parent_session = session,
GlobalData = GlobalData)
})
}
shinyApp(ui, server)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
tags$head(tags$link(rel = "icon", href = "www/favicon.ico"))
tags$head(tags$link(rel = "icon", href = "www/favicon.ico"))
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
library(correlationAnalyzeR)
library(shiny)
# getCorrelationData(geneList = "ATM", Sample_Type = "Normal_Tissues", Species = "hsapiens")
getwd()
runApp(launch.browser = T)
